# Checks required for a PR to merge. This workflow mostly call other workflows.
name: PR/push

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  FastBuild:
    name: Fast build
    env:
      PKG_CONFIG_PATH: "C:\\vcpkg\\packages\\hwloc_x64-windows\\lib\\pkgconfig"
    strategy:
      matrix:
        include:
          - os: windows-latest
            nproc: $Env:NUMBER_OF_PROCESSORS
            pool_scalable: 'OFF'
            disjoint: 'OFF'
            jemalloc: 'OFF'
          # pure C build (Windows)
          - os: windows-latest
            nproc: $Env:NUMBER_OF_PROCESSORS
            pool_scalable: 'OFF'
            disjoint: 'OFF'
            jemalloc: 'OFF'
            # Tests' building is off for a pure C build
            extra_build_options: '-DUMF_BUILD_TESTS=OFF'
          - os: ubuntu-latest
            nproc: '$(nproc)'
            pool_scalable: 'ON'
            disjoint: 'ON'
            jemalloc: 'ON'
            # Windows doesn't recognize 'CMAKE_BUILD_TYPE', it uses '--config' param in build command
            extra_build_options: '-DCMAKE_BUILD_TYPE=Release -DUMF_BUILD_BENCHMARKS=ON -DUMF_BUILD_BENCHMARKS_MT=ON'
          # pure C build (Linux)
          - os: ubuntu-latest
            nproc: '$(nproc)'
            pool_scalable: 'ON'
            disjoint: 'OFF'
            jemalloc: 'ON'
            # Windows doesn't recognize 'CMAKE_BUILD_TYPE', it uses '--config' param in build command
            # Tests' building is off for a pure C build
            extra_build_options: '-DCMAKE_BUILD_TYPE=Release -DUMF_BUILD_BENCHMARKS=ON -DUMF_BUILD_TESTS=OFF'
    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - if: matrix.os == 'windows-latest'
      name: Cache hwloc vcpkg package
      uses: actions/cache@v4
      id: cache-hwloc-package
      with:
        path: C:/vcpkg/packages/hwloc_x64-windows
        key:  vcpkg-packages-1

    - if: ${{ matrix.os == 'windows-latest' }} && ${{ steps.cache-hwloc-package.outputs.cache-hit != 'true' }}
      name: Install vcpkg packages
      run: vcpkg install hwloc

    - name: Install apt packages
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libjemalloc-dev libhwloc-dev libnuma-dev libtbb-dev

    - name: Configure CMake
      run: >
        cmake
        -B ${{github.workspace}}/build
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_ENABLE_POOL_TRACKING=ON
        -DUMF_BUILD_LIBUMF_POOL_SCALABLE=${{matrix.pool_scalable}}
        -DUMF_BUILD_LIBUMF_POOL_DISJOINT=${{matrix.disjoint}}
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=${{matrix.jemalloc}}
        -DUMF_BUILD_TESTS=ON
        -DUMF_BUILD_EXAMPLES=ON
        ${{matrix.extra_build_options}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release -j ${{matrix.nproc}}

    - name: Run examples
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure --test-dir examples

  CodeStyle:
    name: Coding style
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake clang-format-15

    - name: Configure CMake
      run: >
        cmake
        -B ${{github.workspace}}/build
        -DUMF_FORMAT_CODE_STYLE=ON
        -DUMF_BUILD_OS_MEMORY_PROVIDER=OFF
        -DUMF_BUILD_TESTS=OFF

    - name: Check clang-format
      run: cmake --build build --target clang-format-check

  Spellcheck:
    uses: ./.github/workflows/spellcheck.yml
  Build:
    name: Basic builds
    needs: [Spellcheck, FastBuild, CodeStyle]
    uses: ./.github/workflows/basic.yml
  Sanitizers:
    needs: [Spellcheck, FastBuild, CodeStyle]
    uses: ./.github/workflows/sanitizers.yml
  Benchmarks:
    needs: [Build]
    uses: ./.github/workflows/benchmarks.yml
  ProxyLib:
    needs: [Build]
    uses: ./.github/workflows/proxy_lib.yml
