# Executes benchmarks implemented in this repository
name: Benchmarks

on: workflow_call

permissions:
  contents: read

jobs:
  benchmarks:
    name: Benchmarks
    env:
      BUILD_DIR : "${{github.workspace}}/build/"
      HWLOC_PATH: "${{github.workspace}}/build/vcpkg/packages/hwloc_x64-windows"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest # shared library on Linux
            shared_library: 'ON'
            pool_scalable: 'ON'
            pool_jemalloc: 'ON'
            bench_mt: 'ON'

          - os: ubuntu-latest # static library on Linux
            shared_library: 'OFF'
            pool_scalable: 'ON'
            pool_jemalloc: 'ON'
            bench_mt: 'ON'

          - os: windows-latest # shared library on Windows
            shared_library: 'ON'
            pool_scalable: 'OFF'
            pool_jemalloc: 'OFF'
            bench_mt: 'OFF' # TODO: enable multithread_bench on Windows

          - os: windows-latest # static library on Windows
            shared_library: 'OFF'
            pool_scalable: 'OFF'
            bench_mt: 'OFF' # TODO: enable multithread_bench on Windows

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install apt packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libhwloc-dev libnuma-dev libjemalloc-dev libtbb-dev

      - name: Initialize vcpkg
        if: matrix.os == 'windows-latest'
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          vcpkgGitCommitId: 3dd44b931481d7a8e9ba412621fa810232b66289
          vcpkgDirectory: ${{env.BUILD_DIR}}/vcpkg
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install dependencies
        if: matrix.os == 'windows-latest'
        run: vcpkg install
        shell: pwsh # Specifies PowerShell as the shell for running the script.

      - name: Configure build
        run: >
          cmake
          -B ${{env.BUILD_DIR}}
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_PREFIX_PATH="${{env.HWLOC_PATH}}"
          -DUMF_BUILD_SHARED_LIBRARY=${{matrix.shared_library}}
          -DUMF_BUILD_BENCHMARKS=ON
          -DUMF_BUILD_BENCHMARKS_MT=${{matrix.bench_mt}}
          -DUMF_BUILD_TESTS=OFF
          -DUMF_FORMAT_CODE_STYLE=OFF
          -DUMF_DEVELOPER_MODE=OFF
          -DUMF_BUILD_OS_MEMORY_PROVIDER=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=${{matrix.pool_jemalloc}}
          -DUMF_BUILD_LIBUMF_POOL_SCALABLE=${{matrix.pool_scalable}}
          -DUMF_ENABLE_POOL_TRACKING=OFF
          -DUMF_BUILD_LEVEL_ZERO_PROVIDER=OFF

      - name: Build UMF on Linux
        if: matrix.os == 'ubuntu-latest'
        run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

      - name: Build UMF on Windows
        if: matrix.os == 'windows-latest'
        run: cmake --build ${{env.BUILD_DIR}} --config Release -j $Env:NUMBER_OF_PROCESSORS
  
      - name: Run benchmarks
        working-directory: ${{env.BUILD_DIR}}
        run: ctest -V --test-dir benchmark -C Release
