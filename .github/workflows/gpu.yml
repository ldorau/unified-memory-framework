# This workflow builds and tests providers using GPU memory. It requires 
# "level_zero" labeled self-hosted runners installed on systems with the 
# appropriate GPU and drivers.
name: GPU

on: [push, pull_request]

permissions:
  contents: read

jobs:
  # TODO: add support for tests on Windows
  gpu:
    name: Build
    # run only on upstream; forks will not have the HW
    if: github.repository == 'oneapi-src/unified-memory-framework'

    strategy:
      matrix:
        build_type: [Debug]
        compiler: [{c: gcc, cxx: g++}]
        shared_library: ['ON', 'OFF']
    # TODO enable testing on DSS-WINDOWS
    runs-on:  [ "DSS-LEVEL_ZERO", "DSS-UBUNTU" ]

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get information about platform
        run: .github/scripts/get_system_info.sh

      - name: Configure build
        run: >
          cmake
          -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
          -DUMF_BUILD_SHARED_LIBRARY=${{matrix.shared_library}}
          -DUMF_BUILD_BENCHMARKS=ON
          -DUMF_BUILD_TESTS=ON
          -DUMF_BUILD_GPU_TESTS=ON
          -DUMF_BUILD_GPU_EXAMPLES=ON
          -DUMF_FORMAT_CODE_STYLE=ON
          -DUMF_DEVELOPER_MODE=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_ENABLE_POOL_TRACKING=ON

      - name: Build UMF
        run: cmake --build ${{github.workspace}}/build -j $(nproc)

      - name: Run tests
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure --test-dir test

      - name: Run examples
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure --test-dir examples -C ${{matrix.build_type}}

      - name: Run tests under valgrind memcheck
        run: ${{github.workspace}}/test/test_valgrind.sh ${{github.workspace}} ${{github.workspace}}/build memcheck
