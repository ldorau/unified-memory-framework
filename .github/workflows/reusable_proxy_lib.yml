# Builds libumf_proxy and runs tests with it
name: Proxy library

on: workflow_call

permissions:
  contents: read

env:
  BUILD_DIR : "${{github.workspace}}/build"
  INSTL_DIR : "${{github.workspace}}/install-dir"
  COVERAGE_DIR : "${{github.workspace}}/coverage"
  COVERAGE_NAME : "exports-coverage-proxy"

jobs:
  proxy-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        compiler: [{c: gcc, cxx: g++}]
        proxy_lib_pool: ['SCALABLE', 'JEMALLOC']
    name: Proxy Library (ubuntu-22.04, build_type=${{matrix.build_type}}, compilers=${{matrix.compiler.c}}/${{matrix.compiler.cxx}}, proxy_lib_pool=${{matrix.proxy_lib_pool}})
    runs-on: ${{ github.repository_owner == 'oneapi-src' && 'intel-ubuntu-22.04' || 'ubuntu-22.04' }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libhwloc-dev libnuma-dev libtbb-dev lcov

      - name: Configure build
        run: >
          cmake
          -B ${{env.BUILD_DIR}}
          -DCMAKE_INSTALL_PREFIX="${{env.INSTL_DIR}}"
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
          -DUMF_BUILD_SHARED_LIBRARY=ON
          -DUMF_BUILD_BENCHMARKS=OFF
          -DUMF_BUILD_TESTS=ON
          -DUMF_FORMAT_CODE_STYLE=OFF
          -DUMF_DEVELOPER_MODE=ON
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
          -DUMF_TESTS_FAIL_ON_SKIP=ON
          -DUMF_PROXY_LIB_BASED_ON_POOL=${{matrix.proxy_lib_pool}}
          ${{ matrix.build_type == 'Debug' && '-DUMF_USE_COVERAGE=ON' || '' }}

      - name: Build UMF
        run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

      - name: Run "ctest --output-on-failure" with proxy library
        working-directory: ${{env.BUILD_DIR}}
        run: while LD_PRELOAD=./lib/libumf_proxy.so UMF_LOG="level:debug;flush:debug;output:stderr;pid:yes" ./test/test_ipc_max_opened_limit --gtest_filter="*Concurrent*" ; do date; done
