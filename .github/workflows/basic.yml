# Builds project (with various compilers, CMake options, etc.) and runs tests
name: BasicBuilds

on: [push, pull_request]

permissions:
  contents: read

jobs:
  windows-build:
    name: Windows
    env:
      VCPKG_PATH: "${{github.workspace}}/build/vcpkg/packages/hwloc_x64-windows;${{github.workspace}}/build/vcpkg/packages/tbb_x64-windows;${{github.workspace}}/build/vcpkg/packages/jemalloc_x64-windows"
      BUILD_DIR : "${{github.workspace}}/build/${{matrix.build_type}}"
      INSTL_DIR : "${{github.workspace}}/../install-dir"
    strategy:
      matrix:
        os: ['windows-2019', 'windows-2022']
        build_type: [Debug, Release]
        compiler: [{c: cl, cxx: cl}]
        pool_tracking: ['ON', 'OFF']
        shared_library: ['OFF']
        level_zero_provider: ['ON']
        include:
          - os: 'windows-2022'
            build_type: Release
            compiler: {c: clang-cl, cxx: clang-cl}
            pool_tracking: 'ON'
            level_zero_provider: 'ON'
            toolset: "-T ClangCL"
          - os: 'windows-2022'
            build_type: Release
            compiler: {c: cl, cxx: cl}
            pool_tracking: 'ON'
            shared_library: 'ON'
            level_zero_provider: 'ON'
          - os: 'windows-2022'
            build_type: Release
            compiler: {c: cl, cxx: cl}
            pool_tracking: 'ON'
            shared_library: 'ON'
            level_zero_provider: 'OFF'

    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Initialize vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: 3dd44b931481d7a8e9ba412621fa810232b66289
        vcpkgDirectory: ${{github.workspace}}/build/vcpkg
        vcpkgJsonGlob: '**/vcpkg.json'

    - name: Install dependencies
      run: vcpkg install
      shell: pwsh # Specifies PowerShell as the shell for running the script.

    - name: Configure build
      run: >
        cmake
        -B ${{env.BUILD_DIR}}
        ${{matrix.toolset}}
        -DCMAKE_PREFIX_PATH="${{env.VCPKG_PATH}}"
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
        -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
        -DUMF_BUILD_SHARED_LIBRARY=${{matrix.shared_library}}
        -DUMF_ENABLE_POOL_TRACKING=${{matrix.pool_tracking}}
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
        -DUMF_BUILD_LIBUMF_POOL_SCALABLE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=${{matrix.level_zero_provider}}

    - name: Build UMF
      run: cmake --build ${{env.BUILD_DIR}} --config ${{matrix.build_type}} -j $Env:NUMBER_OF_PROCESSORS

    - name: Run tests
      working-directory: ${{env.BUILD_DIR}}
      run: ctest -C ${{matrix.build_type}} --output-on-failure --test-dir test

    - name: Test UMF installation and uninstallation
      # The '--shared-library' parameter is added to the installation test when the UMF is built as a shared library
      # OS provider, pool tracking and scalable pool (always ON in this job) has to be enabled for the basic example to be built
      # The '--examples' parameter is added to the installation test when examples are built
      run: >
        python3 ${{github.workspace}}/test/test_installation.py
        --build-dir ${{env.BUILD_DIR}}
        --install-dir ${{env.INSTL_DIR}}
        --build-type ${{matrix.build_type}}
        --disjoint-pool
        --jemalloc-pool
        --scalable-pool
        ${{ matrix.shared_library == 'ON' && '--shared-library' || ''}}
        ${{ matrix.pool_tracking == 'ON' && '--examples' || '' }}
